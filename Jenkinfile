pipeline {
    agent {
        label 'my-jenkins-slave'
     }

    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "M3"
    }

    stages {
        stage('Build') {
            steps {
                // Get some code from a GitHub repository
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/AmandeepKaur13/jenkins']]])

                // Run Maven on a Unix agent.
                sh "mvn clean package"

                // To run Maven on a Windows agent, use
                // bat "mvn -Dmaven.test.failure.ignore=true clean package"

            }
        }
        stage('Build Docker Image'){
           steps{
               script{
                    sh 'docker login -u=amandeep13kaur -p=Gullu@mullu13'
                    sh 'docker build -t amandeep13kaur/abc -f Dockerfile .'
                }
           }
        }
        stage('push image to Hub'){
            steps{
                script{
                    withCredentials([string(credentialsId: 'dockerhub_pwd', variable: 'dockerhub_pwd')]) {
    // some block
                    sh 'docker login -u=amandeep13kaur -p=${dockerhub_pwd} '
}
                    sh 'docker push amandeep13kaur/abc'

                }
            }
        }
          stage('Deploy to k8s'){
                    steps{
                        script{
                            kubernetesDeploy (configs: 'deploymentservice.yaml', kubeconfigId: 'kuberpwd' )
                        }
                    }
                }
    }
}